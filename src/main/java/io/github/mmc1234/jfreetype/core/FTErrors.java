package io.github.mmc1234.jfreetype.core;

public interface FTErrors {
    int OK = 0x00;
    int CANNOT_OPEN_RESOURCE = 0x01;
    int UNKNOWN_FILE_FORMAT = 0x02;
    int INVALID_FILE_FORMAT = 0x03;
    int INVALID_VERSION = 0x04;
    int LOWER_MODULE_VERSION = 0x05;
    int INVALID_ARGUMENT = 0x06;
    int UNIMPLEMENTED_FEATURE = 0x07;
    int INVALID_TABLE = 0x08;
    int INVALID_OFFSET = 0x09;
    int ARRAY_TOO_LARGE = 0x0A;
    int MISSING_MODULE = 0x0B;
    int MISSING_PROPERTY = 0x0C;
    int INVALID_GLYPH_INDEX = 0x10;
    int INVALID_CHARACTER_CODE = 0x11;
    int INVALID_GLYPH_FORMAT = 0x12;
    int CANNOT_RENDER_GLYPH = 0x13;
    int INVALID_OUTLINE = 0x14;
    int INVALID_COMPOSITE = 0x15;
    int TOO_MANY_HINTS = 0x16;
    int INVALID_PIXEL_SIZE = 0x17;
    int INVALID_HANDLE = 0x20;
    int INVALID_LIBRARY_HANDLE = 0x21;
    int INVALID_DRIVER_HANDLE = 0x22;
    int INVALID_FACE_HANDLE = 0x23;
    int INVALID_SIZE_HANDLE = 0x24;
    int INVALID_SLOT_HANDLE = 0x25;
    int INVALID_CHARMAP_HANDLE = 0x26;
    int INVALID_CACHE_HANDLE = 0x27;
    int INVALID_STREAM_HANDLE = 0x28;
    int TOO_MANY_DRIVERS = 0x30;
    int TOO_MANY_EXTENSIONS = 0x31;
    int OUT_OF_MEMORY = 0x40;
    int UNLISTED_OBJECT = 0x41;
    int CANNOT_OPEN_STREAM = 0x51;
    int INVALID_STREAM_SEEK = 0x52;
    int INVALID_STREAM_SKIP = 0x53;
    int INVALID_STREAM_READ = 0x54;
    int INVALID_STREAM_OPERATION = 0x55;
    int INVALID_FRAME_OPERATION = 0x56;
    int NESTED_FRAME_ACCESS = 0x56;
    int INVALID_FRAME_READ = 0x51;
    int RASTER_UNINITIALIZED = 0x60;
    int RASTER_CORRUPTED = 0x61;
    int RASTER_OVERFLOW = 0x62;
    int RASTER_NEGATIVE_HEIGHT = 0x63;
    int TOO_MAY_CACHES = 0x70;
    int INVALID_OPCODE = 0x80;
    int TOO_FEW_ARGUMENTS = 0x81;
    int STACK_OVERFLOW = 0x82;
    int CODE_OVERFLOW = 0x83;
    int BAD_ARGUMENT = 0x84;
    int DIVIDE_BY_ZERO = 0x85;
    int INVALID_REFERENCE = 0x86;
    int DEBUG_OPCODE = 0x87;
    int ENDF_IN_EXEC_STREAM = 0x88;
    int NESTED_DEFS = 0x89;
    int INVALID_CODERANCE = 0x8A;
    int EXECUTION_TOO_LONG = 0x8B;
    int TOO_MANY_FUNCTION_DEFS = 0x8C;
    int TOO_MANY_INSTRUCTION_DEFS = 0x8D;
    int TABLE_MISSING = 0x8E;
    int HORIZ_HEADER_MISSING = 0x8F;
    int LOCATIONS_MISSING = 0x90;
    int NAME_TABLE_MISSING = 0x91;
    int CMAP_TABLE_MISSING = 0x92;
    int HMTX_TABLE_MISSING = 0x93;
    int POST_TABLE_MISSING = 0x94;
    int INVALID_HORIZ_METRICS = 0x95;
    int INVALID_CHARMAP_FORMAT = 0x96;
    int INVALID_PPEM = 0x97;
    int INVALID_VERT_METRICS = 0x98;
    int COULD_NOT_FIND_CONTEXT = 0x99;
    int INVALID_POST_TABLE_FORMAT = 0x9A;
    int INVALID_POST_TABLE = 0x9B;
    int DEF_IN_GLYF_BYTECODE = 0x9C;
    int MISSING_BITMAP = 0x9D;
    int SYNTAX_ERROR = 0xA0;
    int STACK_UNDERFLOW = 0xA1;
    int IGNORE = 0xA2;
    int NO_UNICODE_GLYPH_NAME = 0xA3;
    int GLYPH_TOO_BIG = 0xA4;
    int MISSING_STARTFONT_FIELD = 0xB0;
    int MISSING_FONT_FIELD = 0xB1;
    int MISSING_SIZE_FIELD = 0xB2;
    int MISSING_FONTBOUNDINGBOX_FIELD = 0xB3;
    int MISSING_CHARS_FIELD = 0xB4;
    int MISSING_STARTCHAR_FIELD = 0xB5;
    int MISSING_ENCODING_FIELD = 0xB6;
    int MISSING_BBX_FIELD = 0xB7;
    int BBX_TOO_BIG = 0xB8;
    int CORRUPTED_FONT_HEADER = 0xB9;
    int CORRUPTED_FONT_GLYPHS = 0xBA;

    public static String toString(int error) {
        return switch (error) {
            case OK -> "no error";
            case CANNOT_OPEN_RESOURCE -> "cannot open resource";
            case UNKNOWN_FILE_FORMAT -> "unknown file format";
            case INVALID_FILE_FORMAT -> "broken file";
            case INVALID_VERSION -> "invalid FreeType version";
            case LOWER_MODULE_VERSION -> "module version is too low";
            case INVALID_ARGUMENT -> "invalid argument";
            case UNIMPLEMENTED_FEATURE -> "unimplemented feature";
            case INVALID_OFFSET -> "broken offset within table";
            case ARRAY_TOO_LARGE -> "array allocation size too large";
            case MISSING_MODULE -> "missing module";
            case MISSING_PROPERTY -> "missing property";
            case INVALID_GLYPH_INDEX -> "invalid glyph index";
            case INVALID_CHARACTER_CODE -> "invalid character code";
            case INVALID_GLYPH_FORMAT -> "unsupported glyph image format";
            case CANNOT_RENDER_GLYPH -> "cannot render this glyph format";
            case INVALID_OUTLINE -> "invalid outline";
            case INVALID_COMPOSITE -> "invalid composite glyph";
            case TOO_MANY_HINTS -> "too many hints";
            case INVALID_PIXEL_SIZE -> "invalid pixel size";
            case INVALID_HANDLE -> "invalid object handle";
            case INVALID_LIBRARY_HANDLE -> "invalid library handle";
            case INVALID_DRIVER_HANDLE -> "invalid module handle";
            case INVALID_FACE_HANDLE -> "invalid face handle";
            case INVALID_SIZE_HANDLE -> "invalid size handle";
            case INVALID_SLOT_HANDLE -> "invalid glyph slot handle";
            case INVALID_CHARMAP_HANDLE -> "invalid charmap handle";
            case INVALID_CACHE_HANDLE -> "invalid cache manager handle";
            case INVALID_STREAM_HANDLE -> "invalid stream handle";
            case RASTER_UNINITIALIZED -> "raster uninitialized";
            case RASTER_CORRUPTED -> "raster corrupted";
            case RASTER_OVERFLOW -> "raster overflow";
            case RASTER_NEGATIVE_HEIGHT -> "negative height while rastering";
            case TOO_MAY_CACHES -> "too many registered caches";
            case INVALID_OPCODE -> "invalid opcode";
            case TOO_FEW_ARGUMENTS -> "too few arguments";
            case STACK_OVERFLOW -> "stack overflow";
            case CODE_OVERFLOW -> "code overflow";
            case BAD_ARGUMENT -> "bad argument";
            case DIVIDE_BY_ZERO -> "division by zero";
            case INVALID_REFERENCE -> "invalid reference";
            case DEBUG_OPCODE -> "found debug opcode";
            case ENDF_IN_EXEC_STREAM -> "found ENDF opcode in execution stream";
            case NESTED_DEFS -> "nested DEFS";
            case INVALID_CODERANCE -> "invalid code range";
            case EXECUTION_TOO_LONG -> "execution context too long";
            case TOO_MANY_FUNCTION_DEFS -> "too many function definitions";
            case TOO_MANY_INSTRUCTION_DEFS -> "too many instruction definitions";
            case TABLE_MISSING -> "SFNT font table missing";
            case HORIZ_HEADER_MISSING -> "SFNT font table missing";
            case LOCATIONS_MISSING -> "locations (loca) table missing";
            case NAME_TABLE_MISSING -> "name table missing";
            case CMAP_TABLE_MISSING -> "character map (cmap) table missing";
            case HMTX_TABLE_MISSING -> "horizontal metrics (hmtx) table missing";
            case POST_TABLE_MISSING -> "PostScript (post) table missing";
            case INVALID_HORIZ_METRICS -> "invalid horizontal metrics";
            case INVALID_CHARMAP_FORMAT -> "invalid character map (cmap) format";
            case INVALID_PPEM -> "invalid ppem value";
            case INVALID_VERT_METRICS -> "invalid vertical metrics";
            case COULD_NOT_FIND_CONTEXT -> "could not find context";
            case INVALID_POST_TABLE_FORMAT -> "invalid PostScript (post) table format";
            case INVALID_POST_TABLE -> "invalid PostScript (post) table";
            case DEF_IN_GLYF_BYTECODE -> "found FDEF or IDEF opcode in glyf bytecode";
            case MISSING_BITMAP -> "missing bitmap in strike";
            case SYNTAX_ERROR -> "opcode syntax error";
            case STACK_UNDERFLOW -> "argument stack underflow";
            case IGNORE -> "ignore";
            case NO_UNICODE_GLYPH_NAME -> "no Unicode glyph name found";
            case GLYPH_TOO_BIG -> "glyph too big for hinting";
            case MISSING_STARTFONT_FIELD -> "`STARTFONT' field missing";
            case MISSING_FONT_FIELD -> "`FONT' field missing";
            case MISSING_SIZE_FIELD -> "`SIZE' field missing";
            case MISSING_FONTBOUNDINGBOX_FIELD -> "`FONTBOUNDINGBOX' field missing";
            case MISSING_CHARS_FIELD -> "`FONTBOUNDINGBOX' field missing";
            case MISSING_STARTCHAR_FIELD -> "`STARTCHAR' field missing";
            case MISSING_ENCODING_FIELD -> "`ENCODING' field missing";
            case MISSING_BBX_FIELD -> "`BBX' field missing" ;
            case BBX_TOO_BIG -> "`BBX' field missing" ;
            case CORRUPTED_FONT_HEADER -> "Font header corrupted or missing fields";
            case CORRUPTED_FONT_GLYPHS -> "Font header corrupted or missing fields";
            default -> throw new IllegalStateException("Unexpected value: " + error);
        };
    }

    public static boolean isSuccess(int error) {
        return error == OK;
    }

    public static boolean isFail(int error) {
        return error != OK;
    }
}
